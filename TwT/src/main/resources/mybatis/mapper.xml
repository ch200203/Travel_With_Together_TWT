<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="twt">

	<!-- ================================용훈================================== -->
	<resultMap type="ScheduleReview" id="ScheduleReviewMap">
		<result property="sr_Code" column="SR_CODE" />
		<result property="m_Code" column="M_CODE" />
		<result property="ts_Code" column="TS_CODE" />
		<result property="sr_Title" column="SR_TITLE" />
		<result property="sr_Content" column="SR_CONTENT" />
		<result property="sr_ImgSrc" column="SR_IMGSRC" />
		<result property="sr_View" column="SR_VIEW" />
		<result property="sr_Date" column="SR_DATE" />
	</resultMap>
	<resultMap type="Answer" id="AnswerMap">
		<result property="ans_Code" column="ANS_CODE" />
		<result property="m_Code" column="M_CODE" />
		<result property="board_Code" column="BOARD_CODE" />
		<result property="reple_Code" column="REPLE_CODE" />
		<result property="ans_Content" column="ANS_CONTENT" />
		<result property="ans_Date" column="ANS_DATE" />
	</resultMap>

	<insert id="ansInsert_Y" parameterType="Answer">
		INSERT INTO ANS
		VALUES('AS'||AS_SEQ.NEXTVAL, #{m_Code}, #{board_Code}, #{reple_Code},
		#{ans_Content}, SYSDATE)
	</insert>

	<select id="ansList_Y" resultMap="AnswerMap"
		parameterType="String">
		SELECT * FROM ANS
		WHERE BOARD_CODE = #{sr_Code}
		ORDER BY
		ANS_DATE
	</select>

	<insert id="insertPotoBook_Y" parameterType="ScheduleReview">
		INSERT INTO
		SCHEDULEREVIEW
		VALUES('SR'||SR_SEQ.NEXTVAL, #{m_Code}, NULL,
		#{sr_Title}, #{sr_Content}, #{sr_ImgSrc}, 0, SYSDATE)
	</insert>

	<select id="selectList_Y" resultMap="ScheduleReviewMap">
		SELECT * FROM SCHEDULEREVIEW
		ORDER BY SR_DATE DESC
	</select>

	<select id="potoOne_Y" parameterType="String"
		resultType="ScheduleReview">
		SELECT * FROM SCHEDULEREVIEW
		WHERE SR_CODE = #{sr_Code}
	</select>

	<update id="updatePotoBook_Y" parameterType="ScheduleReview">
		UPDATE
		SCHEDULEREVIEW
		SET
		SR_TITLE = #{sr_Title},
		SR_CONTENT = #{sr_Content},
		SR_IMGSRC = #{sr_ImgSrc},
		SR_DATE = SYSDATE
		WHERE SR_CODE = #{sr_Code}
	</update>

	<delete id="deletePotoBook_Y" parameterType="String">
		DELETE FROM
		SCHEDULEREVIEW
		WHERE SR_CODE = #{sr_Code}
	</delete>
	<!-- ================================범식================================== -->


	<resultMap type="Hotel" id="hotelMap">
		<result property="h_Code" column="H_CODE" />
		<result property="city_Code" column="CITY_CODE" />
		<result property="h_Name" column="H_NAME" />
		<result property="h_Lati" column="H_LATI" />
		<result property="h_Long" column="H_LONG" />
		<result property="h_phone" column="H_PHONE" />
		<result property="h_Basicaddr" column="H_BASICADDR" />
		<result property="h_Addr" column="H_ADDR" />
		<result property="h_Img" column="H_IMG" />
		<result property="h_Content" column="H_CONTENT" />
		<result property="h_Starn" column="H_STARN" />
		<result property="h_Basiccontent" column="H_BASICCONTENT" />
	</resultMap>

	<!-- 호텔리스트 -->
	<select id="HselectList" parameterType="Hotel" resultMap="hotelMap">
		SELECT TB.*
		FROM (
			SELECT ROWNUM as rn, ht.*
			FROM (
				SELECT *
				FROM HOTEL
				ORDER BY H_CODE) ht
			ORDER BY rn) TB
		WHERE rn BETWEEN #{startIndex} AND #{endIndex}
	</select>
	
	<!-- 호텔리스트 목록 개수 -->
	<select id="HselectListCnt" resultType="Integer">
		SELECT COUNT(*) FROM HOTEL 
		ORDER BY H_CODE DESC
	</select>



	<select id="selectOne_B" resultType="Hotel"
		parameterType="String">
		SELECT * FROM HOTEL WHERE H_CODE = #{h_code}

	</select>








	<!-- ================================도영================================== -->

	<!-- 여행일정 게시판 리스트 최신 순 -->
	<select id="selectList_D" resultType="TravelSchedule">
		<!-- SELECT * FROM TRAVELSCHEDULE TS LEFT JOIN TWTMEMBER M ON (TS.M_CODE 
			= M.M_CODE) LEFT JOIN TRAVELSCHEDULE_DAY TD ON (TS.TS_CODE = TD.TS_CODE) 
			LEFT JOIN TRAVELPOINT TP ON(TS.TP_CODE = TP.TP_CODE) ORDER BY TS_DATE DESC -->
		SELECT TS.TS_CODE, TS.M_CODE, TS.TP_CODE, TS.TS_TITLE, TS.TS_SDAY,
		TS.TS_THEME, TS.TS_PEOPLE, TS.TS_THUM, TS.TS_PERIOD, TS.TS_DATE,
		TS.TS_VIEW, M.M_NAME, TP.CITY_CODE, TP.TP_IMG FROM TRAVELSCHEDULE TS
		LEFT JOIN TWTMEMBER M ON (TS.M_CODE = M.M_CODE) LEFT JOIN TRAVELPOINT
		TP ON(TS.TP_CODE = TP.TP_CODE) ORDER BY TS_DATE DESC
	</select>

	<!-- 여행일정 게시판 리스트 조회수 순 -->
	<select id="PselectList_D" resultType="TravelSchedule">
		SELECT TS.TS_CODE,
		TS.M_CODE, TS.TP_CODE, TS.TS_TITLE, TS.TS_SDAY,
		TS.TS_THEME,
		TS.TS_PEOPLE, TS.TS_THUM, TS.TS_PERIOD, TS.TS_DATE,
		TS.TS_VIEW,
		M.M_NAME, TP.CITY_CODE, TP.TP_IMG FROM TRAVELSCHEDULE TS
		LEFT JOIN
		TWTMEMBER M ON (TS.M_CODE = M.M_CODE) LEFT JOIN TRAVELPOINT
		TP
		ON(TS.TP_CODE = TP.TP_CODE) ORDER BY TS_VIEW DESC
	</select>

	<!-- 디테일 리스트 -->
	<select id="detailList_D" parameterType="String"
		resultType="TravelSchedule">
		SELECT * FROM TRAVELSCHEDULE TS LEFT JOIN TWTMEMBER M ON
		(TS.M_CODE =
		M.M_CODE) LEFT JOIN TRAVELSCHEDULE_DAY TD ON (TS.TS_CODE =
		TD.TS_CODE)
		LEFT JOIN TRAVELPOINT TP ON(TS.TP_CODE = TP.TP_CODE) WHERE
		TS.TS_CODE
		= #{TS_CODE}
	</select>

	<!-- 여행 일정 디테일 -->	
<!-- 	<select id="selectOne_D" parameterType="String" resultType="TravelSchedule">
SELECT TS.TS_CODE, TS.M_CODE, TS.TP_CODE, TS.TS_TITLE, TS.TS_SDAY, TS.TS_THEME, TS.TS_PEOPLE, TS.TS_THUM, TS.TS_PERIOD, TS.TS_DATE, TS.TS_VIEW, M.M_ID, TD.TS_DAY, TP.TP_TYPE, TP.TP_CONTENT FROM TRAVELSCHEDULE TS LEFT JOIN TWTMEMBER M ON (TS.M_CODE = M.M_CODE) LEFT JOIN TRAVELSCHEDULE_DAY TD ON (TS.TS_CODE = TD.TS_CODE) LEFT JOIN TRAVELPOINT TP ON(TS.TP_CODE = TP.TP_CODE) WHERE TS.TS_CODE = #{TS_CODE}
		SELECT * FROM TRAVELSCHEDULE TS LEFT JOIN TWTMEMBER M ON (TS.M_CODE = M.M_CODE) LEFT JOIN TRAVELSCHEDULE_DAY TD ON (TS.TS_CODE = TD.TS_CODE) LEFT JOIN TRAVELPOINT TP ON(TS.TP_CODE = TP.TP_CODE) WHERE TS.TS_CODE = #{TS_CODE}
	</select> -->
	
	<!-- 연관 일정 -->
	<select id="themeList_D" parameterType="String"
		resultType="TravelSchedule">
		SELECT TS.TS_CODE, TS.M_CODE, TS.TP_CODE, TS.TS_TITLE,
		TS.TS_SDAY,
		TS.TS_THEME, TS.TS_PEOPLE, TS.TS_THUM, TS.TS_DATE,
		TS.TS_VIEW, M_NAME,
		TP.CITY_CODE, TP.TP_IMG FROM TRAVELSCHEDULE TS LEFT
		JOIN TWTMEMBER M
		ON (TS.M_CODE = M.M_CODE) LEFT JOIN TRAVELSCHEDULE_DAY
		TD ON
		(TS.TS_CODE = TD.TS_CODE) LEFT JOIN TRAVELPOINT TP ON(TS.TP_CODE
		=
		TP.TP_CODE) WHERE TS.TS_THEME = #{TS_THEME} ORDER BY TS_DATE DESC
	</select>

	<!-- ================================보미================================== -->
	<!-- 회원가입 -->
	<insert id="insertM" parameterType="Member">
		INSERT INTO TWTMEMBER VALUES
		('M'||M_SEQ.NEXTVAL,#{m_Id},#{m_Pass},#{m_Name},#{m_Email},#{m_Api,jdbcType=VARCHAR},'N')
	</insert>

	<!-- 회원탈퇴 -->
	<delete id="deleteUserM" parameterType="String">
		DELETE FROM TWTMEMBER
		WHERE M_CODE = #{m_Code}
	</delete>

	<!-- 로그인 -->
	<select id="loginM" resultType="Member">
		SELECT * FROM TWTMEMBER WHERE
		M_ID = #{m_Id}
	</select>

	<!-- 로그인 시 중복되는 아이디 있나 체크 -->
	<select id="loginIdChk" resultType="int">
		SELECT COUNT(*) FROM
		TWTMEMBER
		WHERE M_ID = #{m_Id}
	</select>

	<!-- 로그인 시 디비에 저장된 비밀번호 체크 -->
	<select id="loginPwdChk" resultType="int">
		SELECT COUNT(*) FROM
		TWTMEMBER
		WHERE M_PASS = #{m_Pass}
	</select>

	<!-- 아이디 중복검사 -->
	<select id="idChkM" resultType="int">
		SELECT COUNT(*) FROM TWTMEMBER
		WHERE M_ID = #{m_Id}
	</select>

	<!-- 유저 인증키 생성 -->
	<update id="GetKey" parameterType="Member">
		UPDATE TWTMEMBER SET
		M_MAILCHECK = #{m_Mailcheck} WHERE M_ID = #{m_Id}
	</update>

	<!-- 유저 인증키(난수) Y로 변경 -->
	<update id="alterUserKey" parameterType="Member">
		UPDATE TWTMEMBER SET
		M_MAILCHECK = 'Y' WHERE M_ID = #{m_Id} AND M_MAILCHECK = 'N'
	</update>

	<!-- 항공권 조회 -->
	<select id="selectAllAirM" resultType="AirplaneInfo">
		SELECT * FROM AIRPLANEINFO
		WHERE M_CODE = #{m_Code}
	</select>

	<!-- 항공권 입력 -->
	<insert id="insertAirM" parameterType="AirplaneInfo">
		INSERT INTO AIRPLANEINFO
		VALUES (#{m_Code},#{dep_Loca1},#{dep_Loca2},#{dep_Date1},
		#{dep_Date2},#{dep_Time1},#{dep_Time2},#{re_Loca1},
		#{re_Loca2},#{re_Date1},#{re_Date2},#{re_Time1},#{re_Time2},'AIR12')
	</insert>

	<!-- 항공권 수정 -->
	<update id="updateAirM" parameterType="AirplaneInfo">
		UPDATE AIRPLANEINFO SET
		DEP_LOCA1 = #{dep_Loca1}, DEP_LOCA2 = #{dep_Loca2}, DEP_DATE1 =
		#{dep_Date1}, DEP_DATE2 = #{dep_Date2},
		DEP_TIME1 = #{dep_Time1},
		DEP_TIME2 = #{dep_Time2}, RE_LOCA1 = #{re_Loca1},
		RE_LOCA2 =
		#{re_Loca2}, RE_DATE1 = #{re_Date1}, RE_DATE2 = #{re_Date2},
		RE_TIME1 =
		#{re_Time1}, RE_TIME2 = #{re_Time2} WHERE AIR_CODE = #{air_Code}
	</update>

	<!-- 항공권 정보 삭제 -->
	<delete id="deleteAirM" parameterType="String">
		DELETE FROM AIRPLANEINFO
		WHERE AIR_CODE = #{air_Code}
	</delete>

	<!-- 아이디를 통해 로그인 한 멤버의 모든 정보 알기위함 -->
	<select id="loginSelectOne" parameterType="Member"
		resultType="Member">
		SELECT *
		FROM TWTMEMBER
		WHERE M_ID = #{m_Id}
	</select>

	<!-- 비밀번호 변경 -->
	<update id="updateM" parameterType="Member">
		UPDATE TWTMEMBER SET
		M_PASS =
		#{m_Pass} WHERE M_ID = #{m_Id}
	</update>

	<!-- 회원 임시 비밀번호 -->
	<update id="searchPasswordM" parameterType="Member">
		UPDATE TWTMEMBER SET
		M_PASS = #{m_Pass} WHERE M_ID = #{m_Id} AND M_EMAIL = #{m_Email}
	</update>

	<!-- 호텔 예약 조회 -->
	<select id="selectAllBookM" resultType="HotelBooking">
		SELECT * FROM HBOOKING
		WHERE M_Code = #{m_Code}
	</select>

	<!-- 소셜 로그인 시 자동 회원가입 -->
	<insert id="insertSNSM" parameterType="Member">
		INSERT INTO TWTMEMBER
		VALUES
		('M'||M_SEQ.NEXTVAL,#{m_Id},#{m_Pass},#{m_Name},#{m_Email},#{m_Api,jdbcType=VARCHAR},'Y')
	</insert>

	<!-- 찜 목록 갯수 조회 -->
	<select id="likeM" resultType="TravelSchedule" parameterType="TravelSchedule">
		SELECT * FROM FAVORITE_LIST F JOIN TRAVELSCHEDULE T ON (F.FL_CODE = T.TS_CODE) WHERE FL_CHECK='Y' AND F.M_CODE = #{m_Code}
	</select>
	
	<!-- 내가 쓴 일정 조회 -->
	<select id="routeM" resultType="TravelSchedule" parameterType="TravelSchedule">
	    SELECT * FROM TRAVELSCHEDULE WHERE M_CODE = #{m_Code}
	</select>

	<!-- ================================찬우================================== -->



	<!-- ================================수지================================== -->
	<!-- 모든 city 정보 불러오기 -->
	<select id="selectcityall_S" resultType="City">
		SELECT * FROM CITY
	</select>

	<!-- 선택된 city spot 모두 불러오기 -->
	<select id="selectallspot_S" resultType="TravelPoint">
		SELECT * FROM TRAVELPOINT ORDER BY SUBSTR(CITY_CODE, 3), TO_NUMBER(SUBSTR(TP_CODE, 3))
	</select>

	<!-- 선택된 city 정보 불러오기 -->
	<select id="selectcityone_S" resultType="City" parameterType="String">
		SELECT * FROM CITY WHERE CITY_CODE = #{citycode}
	</select>
	
	

	<!-- ================================철환================================== -->


</mapper>
	
	